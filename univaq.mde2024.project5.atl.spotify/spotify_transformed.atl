-- @path MM=/univaq.mde2024.project4.musicStreamingService/model/MusicStreamingService.ecore
-- @path MM1=/univaq.mde2024.project5.musicStreamingService_v2/model/MusicStreamingService.ecore

module spotifytransformed;
create OUT : MM1 from IN : MM;

-- Rule for StreamingService
rule StreamingServiceToStreamingService {
    from
        src : MM!StreamingService
    to
        tgt : MM1!StreamingService (
            listeners <- src.listeners,
            Artist <- src.Artist,
            podcasts <- src.podcasts,
            Playlist <- src.Playlist,
            Concert <- Sequence{}
        )
}

-- Rule for Artist
rule ArtistToArtist {
    from
        src : MM!Artist
    to
        tgt : MM1!Artist (
            about <- src.about,
            followers <- src.followers,
            img_url <- src.img_url,
            num_of_listeners <- src.num_of_listeners,
            owned_albums <- src.owned_albums,
            owned_solos <- src.owned_solos,
            featured_in <- src.featured_in
        )
}



-- Rule for SingleTrack
rule SingleTrackToSingleTrack {
    from
        src : MM!SingleTrack
    to
        tgt : MM1!SingleTrack (
            Name <- src.Name,
            duration <- src.duration,
            genre <- src.genre,
            lyrics <- src.lyrics,
            featured_artist <- src.featured_artist,
            owner <- src.owner
        )
}

-- Rule for Album
rule AlbumToStudioAlbumOrLiveAlbum {
    from
        src : MM!Album
    to
        studioAlbum : MM1!StudioAlbum (
            Name <- src.Name,
            tracks <- src.tracks,
            duration <- src.duration,
            img_url <- src.img_url,
            owner <- src.owner,
            recordingStudio <- 'Unknown Studio' -- Default value
        ),
        liveAlbum : MM1!LiveAlbum (
            Name <- src.Name,
            tracks <- src.tracks,
            duration <- src.duration,
            img_url <- src.img_url,
            owner <- src.owner,
            eventLocation <- 'Unknown Location' -- Default value
        )
}

-- Rule for User
rule UserToUser {
    from
        src : MM!User
    to
        tgt : MM1!User (
            username <- src.username,
            email <- src.email,
            password <- src.password,
            followed_artist <- src.followed_artist,
            owned_playlist <- src.owned_playlist,
            subscribed_podcast <- src.subscribed_podcast
        )
}

-- Rule for Playlist
rule PlaylistToPlaylist {
    from
        src : MM!Playlist
    to
        tgt : MM1!Playlist (
            Name <- src.Name,
            tracks <- src.tracks,
            num_of_tracks <- src.num_of_tracks,
            duration <- src.duration,
            order <- src.order,
            owners <- src.owners
        )
}

-- Rule for Podcast
rule PodcastToPodcast {
    from
        src : MM!Podcast
    to
        tgt : MM1!Podcast (
            Name <- src.Name,
            category <- src.tag, -- Map 'tag' to 'category'
            rating <- src.rating,
            img_url <- src.img_url,
            episodes <- src.episodes,
            followers <- src.followers
        )
}

-- Rule for Episodes to PodcastEpisode
rule EpisodesToPodcastEpisode {
    from
        src : MM!Episodes
    to
        tgt : MM1!PodcastEpisode (
            Name <- src.Name,
            duration <- src.duration,
            date_created <- src.date_created,
            transcript <- src.transcript,
            description <- src.description
        )
}

-- Rule for AlbumTrack
rule AlbumTrackToAlbumTrack {
    from
        src : MM!AlbumTrack
    to
        tgt : MM1!AlbumTrack (
            Name <- src.Name,
            duration <- src.duration,
            genre <- src.genre,
            lyrics <- src.lyrics,
            featured_artist <- src.featured_artist,
            position <- src.position
        )
}

rule MusicGenreMapping {
    from
        src : MM!Track -- Assuming Track references MusicGenre
    to
        tgt : MM1!Track (
            genre <- if src.genre = #Pop then #Jazz
                     else src.genre endif
        )
}

